css selector = 

html_tag#id_value
html_tag.class_value
html_tag[attribute_name='attribute_value']

css=<HTML tag><. Or #><value of Class or ID attribute><[attribute=Value of attribute]>
Two or more attributes can also be furnished in the syntax. For example, “css=input#Passwd[type=’password’][name=’Passwd’]”.

css=<HTML tag><[attribute^=prefix of the string]>
css=input#Passwd[name^=’Pass’]
css=<HTML tag><[attribute$=suffix of the string]>
css=input#Passwd[name$=’wd’]

css=<HTML tag><[attribute*=sub string]>
tagName[attributeName*=’textcontainedinattributeValue’]

DIRECT CHILD
A direct child in XPATH is defined by the use of a “/“, while on CSS, it’s defined using “>”

XPath: //div/a
CSS: div > a

CHILD OR SUBCHILD 
f an element could be inside another or one it’s childs, it’s defined in XPATH using “//” and in CSS just by a whitespace.
XPath: //div//a
CSS: div a


NEXT SIBLING------
XPATH: //input[@id='username']/following-sibling::input[1]
CSS: #username + input

XPATH: //input[@name='login'and @type='submit']
CSS: input[name='login'][type='submit'] 
Here Selenium will act on the input field with name="login" and type="submit"

div[id='leftBarDiv']  b:nth-of-type(4)
div[id='leftBarDiv']  b:nth-child(4)
